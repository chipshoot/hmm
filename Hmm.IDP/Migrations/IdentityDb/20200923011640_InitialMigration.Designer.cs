// <auto-generated />
using System;
using Hmm.IDP.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hmm.IDP.Migrations.IdentityDb
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20200923011640_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Hmm.IDP.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("SecurityCode")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<DateTime>("SecurityCodeExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("varchar(36) CHARACTER SET utf8mb4")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("Subject")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("08e54ef4-f64c-442b-bd4d-63df65bdfb55"),
                            Email = "fchy@yahoo.com",
                            IsActive = true,
                            Password = "AQAAAAEAACcQAAAAEG/4LGAH+5+zQRO3cPWA/um+2U/BiFudtLhUi29npPzYa1wCdbfOBb+WzoEwFlOMHg==",
                            SecurityCodeExpirationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Subject = "6E8FDCED-8857-46B9-BAD8-6DF2540FD07E",
                            UserName = "fchy",
                            Version = "1840a20b-9590-47ab-939b-926fa5c77459"
                        },
                        new
                        {
                            Id = new Guid("303cac10-a6c6-4b46-846b-aa07a8d46393"),
                            Email = "ftt@yahoo.com",
                            IsActive = true,
                            Password = "AQAAAAEAACcQAAAAEG/4LGAH+5+zQRO3cPWA/um+2U/BiFudtLhUi29npPzYa1wCdbfOBb+WzoEwFlOMHg==",
                            SecurityCodeExpirationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Subject = "1501CAB6-CA3F-470F-AE5E-1A0B970D1707",
                            UserName = "fzt",
                            Version = "68596c86-04fc-4e29-a94e-dd0857143397"
                        },
                        new
                        {
                            Id = new Guid("3dd54a32-688f-40fb-9f5e-666ff007b3c1"),
                            Email = "bsmith@gmail.com",
                            IsActive = true,
                            Password = "AQAAAAEAACcQAAAAEG/4LGAH+5+zQRO3cPWA/um+2U/BiFudtLhUi29npPzYa1wCdbfOBb+WzoEwFlOMHg==",
                            SecurityCodeExpirationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Subject = "157BBC69-9989-4353-A4B9-02A205678562",
                            UserName = "bob",
                            Version = "428595be-7cb5-4e9b-9b90-3896e6bf30cc"
                        });
                });

            modelBuilder.Entity("Hmm.IDP.Entities.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("varchar(36) CHARACTER SET utf8mb4")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf88af3a-3724-4ccb-accd-cef5163dceb9"),
                            Type = "name",
                            UserId = new Guid("08e54ef4-f64c-442b-bd4d-63df65bdfb55"),
                            Value = "Chaoyang Fang",
                            Version = "27cfacd6-9dfa-4d19-a4f1-82a2485d54e0"
                        },
                        new
                        {
                            Id = new Guid("81f460b0-32d6-40f2-95ab-8afd34dc8820"),
                            Type = "given_name",
                            UserId = new Guid("08e54ef4-f64c-442b-bd4d-63df65bdfb55"),
                            Value = "Chaoyang",
                            Version = "43725c40-cec3-453c-9312-f611e693fc62"
                        },
                        new
                        {
                            Id = new Guid("a266e9ac-df0c-4daa-8361-3aa5a2429320"),
                            Type = "family_name",
                            UserId = new Guid("08e54ef4-f64c-442b-bd4d-63df65bdfb55"),
                            Value = "Fang",
                            Version = "f733d6f9-042b-4221-87f4-e55541f5913a"
                        },
                        new
                        {
                            Id = new Guid("beed829e-b9c1-4cd7-896a-7634e0b6b64d"),
                            Type = "email",
                            UserId = new Guid("08e54ef4-f64c-442b-bd4d-63df65bdfb55"),
                            Value = "fchy@yahoo.com",
                            Version = "f6f0b9bc-d470-4751-be27-74ab668d84d0"
                        },
                        new
                        {
                            Id = new Guid("3694d258-e26f-4459-a2cc-825b87e20bc0"),
                            Type = "address",
                            UserId = new Guid("08e54ef4-f64c-442b-bd4d-63df65bdfb55"),
                            Value = "1750 Bloor St.",
                            Version = "c6920ba6-a651-40a7-9b0f-eaef28d814d0"
                        },
                        new
                        {
                            Id = new Guid("923ebff7-ef5c-405f-b940-5bfcf8ab4ba7"),
                            Type = "birthdate",
                            UserId = new Guid("08e54ef4-f64c-442b-bd4d-63df65bdfb55"),
                            Value = "1967-03-13",
                            Version = "6dfc99a8-e780-47a9-8b7e-8e78c2d71f44"
                        },
                        new
                        {
                            Id = new Guid("2b29cedb-b2b5-43d8-9ac4-084d4efe89f3"),
                            Type = "name",
                            UserId = new Guid("303cac10-a6c6-4b46-846b-aa07a8d46393"),
                            Value = "Zhitao Fang",
                            Version = "a532a5ea-38ff-4832-a4a8-22ba0770feb2"
                        },
                        new
                        {
                            Id = new Guid("6bce6677-292c-4d04-ad18-6c79c6c35fda"),
                            Type = "given_name",
                            UserId = new Guid("303cac10-a6c6-4b46-846b-aa07a8d46393"),
                            Value = "Zhitao",
                            Version = "dbb07efd-055e-4778-b8a0-46b7bb97f931"
                        },
                        new
                        {
                            Id = new Guid("c224d757-842f-416c-8dbd-cf7e58333a09"),
                            Type = "family_name",
                            UserId = new Guid("303cac10-a6c6-4b46-846b-aa07a8d46393"),
                            Value = "Fang",
                            Version = "9b23b5a1-2b43-4fbe-a5c1-bc629ec30db0"
                        },
                        new
                        {
                            Id = new Guid("e533e2a5-6307-4623-ad73-178ac4104844"),
                            Type = "email",
                            UserId = new Guid("303cac10-a6c6-4b46-846b-aa07a8d46393"),
                            Value = "ftt@yahoo.com",
                            Version = "6307616c-9c5d-4a87-8d6e-6214e0002673"
                        },
                        new
                        {
                            Id = new Guid("cbf55bdb-ba9a-4cad-b4fa-345bcf1786a2"),
                            Type = "address",
                            UserId = new Guid("303cac10-a6c6-4b46-846b-aa07a8d46393"),
                            Value = "29 Spencer Ave.",
                            Version = "0886ae79-da8f-45e7-b281-cbe52c3adeee"
                        },
                        new
                        {
                            Id = new Guid("0789bd56-0c75-41da-8c3e-830a8f9ec822"),
                            Type = "birthdate",
                            UserId = new Guid("303cac10-a6c6-4b46-846b-aa07a8d46393"),
                            Value = "1999-09-30",
                            Version = "4c4e3c62-f820-4419-bf26-b62f1c83249b"
                        },
                        new
                        {
                            Id = new Guid("bb8d6fc6-5668-4907-8343-d93de67962f5"),
                            Type = "name",
                            UserId = new Guid("3dd54a32-688f-40fb-9f5e-666ff007b3c1"),
                            Value = "Bob Smith",
                            Version = "4c8349af-1aae-4ab2-a6b3-6759ca762028"
                        },
                        new
                        {
                            Id = new Guid("411c5fb8-2e64-43ea-8552-cf1f3781c25b"),
                            Type = "given_name",
                            UserId = new Guid("3dd54a32-688f-40fb-9f5e-666ff007b3c1"),
                            Value = "Bob",
                            Version = "621f1c98-4d5f-454d-85be-72c6cdfe6ddd"
                        },
                        new
                        {
                            Id = new Guid("e2fcc50e-d2d1-424e-bbef-560f4a7fd790"),
                            Type = "family_name",
                            UserId = new Guid("3dd54a32-688f-40fb-9f5e-666ff007b3c1"),
                            Value = "Smith",
                            Version = "bfaf9cae-a312-4337-b505-cf17e906c32a"
                        },
                        new
                        {
                            Id = new Guid("dc26a3d0-9d66-48b0-91fb-f2af02ea506e"),
                            Type = "email",
                            UserId = new Guid("3dd54a32-688f-40fb-9f5e-666ff007b3c1"),
                            Value = "bsmith@gmail.com",
                            Version = "0f3e5818-6f9e-4e64-a687-a8afc3abc140"
                        },
                        new
                        {
                            Id = new Guid("8e15f9ef-132c-4677-bd3b-10edaf95838d"),
                            Type = "address",
                            UserId = new Guid("3dd54a32-688f-40fb-9f5e-666ff007b3c1"),
                            Value = "3345 Cardross Rd.",
                            Version = "db65b440-9bcd-4d19-8fcc-96084e28bee2"
                        },
                        new
                        {
                            Id = new Guid("db7ef018-eba4-409e-b278-c5fceeac0673"),
                            Type = "birthdate",
                            UserId = new Guid("3dd54a32-688f-40fb-9f5e-666ff007b3c1"),
                            Value = "1987-02-23",
                            Version = "a3750e1a-135e-407c-bc12-bbf0b7b3c925"
                        });
                });

            modelBuilder.Entity("Hmm.IDP.Entities.UserClaim", b =>
                {
                    b.HasOne("Hmm.IDP.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
