// <auto-generated />
using System;
using Hmm.IDP.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hmm.IDP.Migrations.IdentityDb
{
    [DbContext(typeof(IdentityDbContext))]
    partial class IdentityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hmm.IDP.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Subject")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("08e54ef4-f64c-442b-bd4d-63df65bdfb55"),
                            IsActive = true,
                            Password = "fchy",
                            Subject = "6E8FDCED-8857-46B9-BAD8-6DF2540FD07E",
                            UserName = "fchy",
                            Version = "d9c38590-2718-475b-b080-836b0319944d"
                        },
                        new
                        {
                            Id = new Guid("303cac10-a6c6-4b46-846b-aa07a8d46393"),
                            IsActive = true,
                            Password = "fzt",
                            Subject = "1501CAB6-CA3F-470F-AE5E-1A0B970D1707",
                            UserName = "fzt",
                            Version = "317fd686-775d-45e2-bf57-749e1153d9f6"
                        },
                        new
                        {
                            Id = new Guid("3dd54a32-688f-40fb-9f5e-666ff007b3c1"),
                            IsActive = true,
                            Password = "bob",
                            Subject = "157BBC69-9989-4353-A4B9-02A205678562",
                            UserName = "bob",
                            Version = "4b997a64-f851-46d6-b5b7-0a581e61897d"
                        });
                });

            modelBuilder.Entity("Hmm.IDP.Entities.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new
                        {
                            Id = new Guid("faf8d364-dd4f-44fb-a9a5-082270fbb40a"),
                            Type = "Name",
                            UserId = new Guid("08e54ef4-f64c-442b-bd4d-63df65bdfb55"),
                            Value = "Chaoyang Fang",
                            Version = "4ea629a7-a1cd-468f-859f-1fa83b5b5346"
                        },
                        new
                        {
                            Id = new Guid("e9e275b0-0389-44cb-8310-f69ac513a258"),
                            Type = "GivenName",
                            UserId = new Guid("08e54ef4-f64c-442b-bd4d-63df65bdfb55"),
                            Value = "Chaoyang",
                            Version = "80707950-19c1-4b86-a4a5-174ca26418b3"
                        },
                        new
                        {
                            Id = new Guid("b2b399d5-31e4-41b8-b6e0-b9a9e8bb6190"),
                            Type = "FamilyName",
                            UserId = new Guid("08e54ef4-f64c-442b-bd4d-63df65bdfb55"),
                            Value = "Fang",
                            Version = "b5be93f6-6ad0-41d4-bc01-4c3d0b9ac1d8"
                        },
                        new
                        {
                            Id = new Guid("1dba8fb3-e874-4c22-974e-af4fb7d07a41"),
                            Type = "Email",
                            UserId = new Guid("08e54ef4-f64c-442b-bd4d-63df65bdfb55"),
                            Value = "fchy@yahoo.com",
                            Version = "66087583-7033-4bef-8382-4d8c2b670efd"
                        },
                        new
                        {
                            Id = new Guid("3c49c06d-093c-4198-a0b0-6941331aced8"),
                            Type = "Address",
                            UserId = new Guid("08e54ef4-f64c-442b-bd4d-63df65bdfb55"),
                            Value = "1750 Bloor St.",
                            Version = "b5194b19-af74-4bbc-a572-55139fc40940"
                        },
                        new
                        {
                            Id = new Guid("ff31b995-6f62-47c3-becf-ef0b0f0814a2"),
                            Type = "Role",
                            UserId = new Guid("08e54ef4-f64c-442b-bd4d-63df65bdfb55"),
                            Value = "author",
                            Version = "a061d990-325f-43e7-875e-602fe07a4218"
                        },
                        new
                        {
                            Id = new Guid("517ed90f-0065-4707-b17b-cb5cc717c648"),
                            Type = "Name",
                            UserId = new Guid("303cac10-a6c6-4b46-846b-aa07a8d46393"),
                            Value = "Zhitao Fang",
                            Version = "670fbcda-7303-4444-8838-8b881ec42e92"
                        },
                        new
                        {
                            Id = new Guid("cce9802d-d49a-42a8-950e-c119fe876555"),
                            Type = "GivenName",
                            UserId = new Guid("303cac10-a6c6-4b46-846b-aa07a8d46393"),
                            Value = "Zhitao",
                            Version = "008a7eb4-675d-48ea-9550-72fb54c635aa"
                        },
                        new
                        {
                            Id = new Guid("0cb68716-50e4-48c0-9a7c-23edd3de4bb7"),
                            Type = "FamilyName",
                            UserId = new Guid("303cac10-a6c6-4b46-846b-aa07a8d46393"),
                            Value = "Fang",
                            Version = "ad3cb0d7-9105-4faf-87bf-539487558709"
                        },
                        new
                        {
                            Id = new Guid("8b44bb38-7da3-422e-b33f-339723a05f1b"),
                            Type = "Email",
                            UserId = new Guid("303cac10-a6c6-4b46-846b-aa07a8d46393"),
                            Value = "ftt@yahoo.com",
                            Version = "8d4bc42e-6af4-4a40-8e17-a0931a4d800d"
                        },
                        new
                        {
                            Id = new Guid("67f1b342-368a-4045-a3a8-0866cd561ac1"),
                            Type = "Address",
                            UserId = new Guid("303cac10-a6c6-4b46-846b-aa07a8d46393"),
                            Value = "29 Spencer Ave.",
                            Version = "079b077c-c1b4-4ead-83e6-d9dd0755934c"
                        },
                        new
                        {
                            Id = new Guid("a7e95bd3-a6a1-4216-9795-1e744d6bda9d"),
                            Type = "Role",
                            UserId = new Guid("303cac10-a6c6-4b46-846b-aa07a8d46393"),
                            Value = "author",
                            Version = "50caad73-1e4f-4c23-b112-9c5f4189bafc"
                        },
                        new
                        {
                            Id = new Guid("fc0cb468-85ba-48d5-b4ce-d52ea149a5e9"),
                            Type = "Name",
                            UserId = new Guid("3dd54a32-688f-40fb-9f5e-666ff007b3c1"),
                            Value = "Bob Smith",
                            Version = "94ba3859-5f0e-40ef-8233-a032650291d0"
                        },
                        new
                        {
                            Id = new Guid("c5c2ca1f-5106-492a-804d-994b4834b6ab"),
                            Type = "GivenName",
                            UserId = new Guid("3dd54a32-688f-40fb-9f5e-666ff007b3c1"),
                            Value = "Bob",
                            Version = "6d7e8da0-a6f5-45e5-b919-8022b3f5b25a"
                        },
                        new
                        {
                            Id = new Guid("e397b3fd-03ad-45ea-937c-5ba507f38d6a"),
                            Type = "FamilyName",
                            UserId = new Guid("3dd54a32-688f-40fb-9f5e-666ff007b3c1"),
                            Value = "Smith",
                            Version = "1b8b1c42-b78e-46ea-abdd-aa2a48989872"
                        },
                        new
                        {
                            Id = new Guid("b4a3e4fd-0c8c-4714-89e5-bb75ea975427"),
                            Type = "Email",
                            UserId = new Guid("3dd54a32-688f-40fb-9f5e-666ff007b3c1"),
                            Value = "bsmith@gmail.com",
                            Version = "6c1a4bc5-d656-4801-946f-44c7fb9ee6b4"
                        },
                        new
                        {
                            Id = new Guid("7d0b8faf-f38d-4f48-8591-c8f640e1be04"),
                            Type = "Address",
                            UserId = new Guid("3dd54a32-688f-40fb-9f5e-666ff007b3c1"),
                            Value = "3345 Cardross Rd.",
                            Version = "c35cafe5-3960-4b3a-94b3-24444f441e0a"
                        },
                        new
                        {
                            Id = new Guid("79aaf2cd-514a-46f1-b628-e11e034ba921"),
                            Type = "Role",
                            UserId = new Guid("3dd54a32-688f-40fb-9f5e-666ff007b3c1"),
                            Value = "guest",
                            Version = "16270b0e-a1e2-4bb0-824d-5e8da231921f"
                        });
                });

            modelBuilder.Entity("Hmm.IDP.Entities.UserClaim", b =>
                {
                    b.HasOne("Hmm.IDP.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
